import{_ as e,c as a,a5 as l,o as n}from"./chunks/framework.Cn8yLw_6.js";const f=JSON.parse('{"title":"ClimaLand.jl Documentation (v0.14.3)","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),i={name:"index.md"};function r(o,t,s,d,h,m){return n(),a("div",null,t[0]||(t[0]=[l('<h1 id="climaland-jl-documentation-v0-14-3" tabindex="-1">ClimaLand.jl Documentation (v0.14.3) <a class="header-anchor" href="#climaland-jl-documentation-v0-14-3" aria-label="Permalink to &quot;ClimaLand.jl Documentation (v0.14.3)&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>ClimaLand is the Land model of the Climate Modeling Alliance (CliMA) Earth System Model, which also contains other components (<a href="https://github.com/CliMA/ClimaAtmos.jl" target="_blank" rel="noreferrer">atmosphere</a>, <a href="https://github.com/CliMA/ClimaOcean.jl" target="_blank" rel="noreferrer">ocean</a>, <a href="https://github.com/CliMA/ClimaSeaIce.jl" target="_blank" rel="noreferrer">sea-ice</a>).</p><p>ClimaLand can be run coupled (or &quot;online&quot;) with these other components via <a href="https://github.com/CliMA/ClimaCoupler.jl" target="_blank" rel="noreferrer">ClimaCoupler</a>, or it can be run as a standalone, via prescribed meteorological data (&quot;offline&quot;).</p><p>ClimaLand library, described in this documentation, is written in the Julia programming language. It aims to be fast and have a clear syntax. ClimaLand can run on CPU or GPU, it has a modular design, and is flexible in many ways. This documentation will expand on each of these elements.</p><h2 id="Important-Links" tabindex="-1">Important Links <a class="header-anchor" href="#Important-Links" aria-label="Permalink to &quot;Important Links {#Important-Links}&quot;">​</a></h2><ul><li><p><a href="https://clima.caltech.edu/" target="_blank" rel="noreferrer">CliMA Homepage</a></p></li><li><p><a href="https://github.com/CliMA" target="_blank" rel="noreferrer">CliMA GitHub Organisation</a></p></li><li><p><a href="https://github.com/CliMA/ClimaCoupler.jl" target="_blank" rel="noreferrer">ClimaCoupler</a></p></li><li><p><a href="https://github.com/CliMA/ClimaAnalysis.jl" target="_blank" rel="noreferrer">ClimaAnalysis</a></p></li><li><p><a href="https://julialang.org" target="_blank" rel="noreferrer">Julia Homepage</a></p></li></ul><h2 id="Documentation-for-Users-and-Developers" tabindex="-1">Documentation for Users and Developers <a class="header-anchor" href="#Documentation-for-Users-and-Developers" aria-label="Permalink to &quot;Documentation for Users and Developers {#Documentation-for-Users-and-Developers}&quot;">​</a></h2><p>ClimaLand has documentation for both users and developers. The documentation for users is aimed at scientists who wants to run simulations using ClimaLand, whereas the documentation for developers is aimed at contributors of the ClimaLand code library. As such, users can skip reading the docs for developers, and vice-versa.</p><h2 id="Physical-units" tabindex="-1">Physical units <a class="header-anchor" href="#Physical-units" aria-label="Permalink to &quot;Physical units {#Physical-units}&quot;">​</a></h2><p>Note that CliMA, in all its repositories, uses Standard Units, reminded below</p><table tabindex="0"><thead><tr><th style="text-align:left;">Quantity</th><th style="text-align:left;">Unit Name</th><th style="text-align:left;">SI Symbol</th><th style="text-align:left;">SI Unit Equivalent</th></tr></thead><tbody><tr><td style="text-align:left;">Length</td><td style="text-align:left;">Meter</td><td style="text-align:left;">m</td><td style="text-align:left;">1 m</td></tr><tr><td style="text-align:left;">Mass</td><td style="text-align:left;">Kilogram</td><td style="text-align:left;">kg</td><td style="text-align:left;">1 kg</td></tr><tr><td style="text-align:left;">Time</td><td style="text-align:left;">Second</td><td style="text-align:left;">s</td><td style="text-align:left;">1 s</td></tr><tr><td style="text-align:left;">Temperature</td><td style="text-align:left;">Kelvin</td><td style="text-align:left;">K</td><td style="text-align:left;">1 K</td></tr><tr><td style="text-align:left;">Amount of Substance</td><td style="text-align:left;">Mole</td><td style="text-align:left;">mol</td><td style="text-align:left;">1 mol</td></tr><tr><td style="text-align:left;">Energy</td><td style="text-align:left;">Joule</td><td style="text-align:left;">J</td><td style="text-align:left;">1 J = 1 N·m</td></tr><tr><td style="text-align:left;">Power</td><td style="text-align:left;">Watt</td><td style="text-align:left;">W</td><td style="text-align:left;">1 W = 1 J/s</td></tr><tr><td style="text-align:left;">Pressure</td><td style="text-align:left;">Pascal</td><td style="text-align:left;">Pa</td><td style="text-align:left;">1 Pa = 1 N/m²</td></tr><tr><td style="text-align:left;">Frequency</td><td style="text-align:left;">Hertz</td><td style="text-align:left;">Hz</td><td style="text-align:left;">1 Hz = 1 s⁻¹</td></tr></tbody></table>',12)]))}const u=e(i,[["render",r]]);export{f as __pageData,u as default};
