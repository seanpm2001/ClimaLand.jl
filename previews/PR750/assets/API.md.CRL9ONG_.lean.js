import{_ as i,c as a,a5 as e,o as t}from"./chunks/framework.Cn8yLw_6.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"API.md","filePath":"API.md","lastUpdated":null}'),n={name:"API.md"};function l(r,s,p,h,d,o){return t(),a("div",null,s[0]||(s[0]=[e(`<br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.prognostic_vars-Tuple{AbstractModel}" href="#ClimaLand.prognostic_vars-Tuple{AbstractModel}">#</a> <b><u>ClimaLand.prognostic_vars</u></b> — <i>Method</i>. <p>prognostic_vars(m::AbstractModel)</p><p>Returns the prognostic variable symbols for the model in the form of a tuple.</p><p>Note that this default suggests that a model has no prognostic variables, which is an invalid model setup. This function is meant to be extended for all models.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.relative_humidity-Union{Tuple{FT}, Tuple{FT, FT, FT, Any}} where FT" href="#ClimaLand.relative_humidity-Union{Tuple{FT}, Tuple{FT, FT, FT, Any}} where FT">#</a> <b><u>ClimaLand.relative_humidity</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">relative_humidity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T_air, P_air, q_air, thermo_params)</span></span></code></pre></div><p>Computes the vapor pressure deficit for air with temperature T_air, pressure P_air, and specific humidity q_air, using thermo_params, a Thermodynamics.jl param set.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.saving_initialize-NTuple{4, Any}" href="#ClimaLand.saving_initialize-NTuple{4, Any}">#</a> <b><u>ClimaLand.saving_initialize</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">saving_initialize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cb, u, t, integrator)</span></span></code></pre></div><p>This function saves t and p at the start of the simulation, as long as the initial time is in <code>saveat</code>. To run the simulation without saving these initial values, don&#39;t pass the <code>initialize</code> argument to the <code>DiscreteCallback</code> constructor.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.set_atmos_ts!-Union{Tuple{FT}, Tuple{Any, PrescribedAtmosphere{FT}, Any}} where FT" href="#ClimaLand.set_atmos_ts!-Union{Tuple{FT}, Tuple{Any, PrescribedAtmosphere{FT}, Any}} where FT">#</a> <b><u>ClimaLand.set_atmos_ts!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_atmos_ts!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ts_in, atmos</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PrescribedAtmosphere{FT}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p)</span></span></code></pre></div><p>Fill the pre-allocated ts_in <code>Field</code> with a thermodynamic state computed from the atmosphere.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.set_dfluxBCdY!-Tuple{AbstractModel, AbstractBC, AbstractBoundary, Vararg{Any}}" href="#ClimaLand.set_dfluxBCdY!-Tuple{AbstractModel, AbstractBC, AbstractBoundary, Vararg{Any}}">#</a> <b><u>ClimaLand.set_dfluxBCdY!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_dfluxBCdY!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              ::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractBC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              ::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractBoundary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              _</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{ClimaCore.Fields.FieldVector, Nothing}</span></span></code></pre></div><p>A function stub which returns the derivative of the implicit tendency term of the <code>model</code> arising from the boundary condition, with respect to the state Y.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.source!-Tuple{ClimaCore.Fields.FieldVector, AbstractSource, ClimaCore.Fields.FieldVector, NamedTuple, Vararg{Any}}" href="#ClimaLand.source!-Tuple{ClimaCore.Fields.FieldVector, AbstractSource, ClimaCore.Fields.FieldVector, NamedTuple, Vararg{Any}}">#</a> <b><u>ClimaLand.source!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> source!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClimaCore.Fields.FieldVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         Y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClimaCore.Fields.FieldVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         )</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClimaCore.Fields.Field</span></span></code></pre></div><p>A stub function, which is extended by ClimaLand.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.source!-Tuple{ClimaCore.Fields.FieldVector, ClimaLand.RootExtraction, ClimaCore.Fields.FieldVector, NamedTuple, ClimaLand.Soil.EnergyHydrology}" href="#ClimaLand.source!-Tuple{ClimaCore.Fields.FieldVector, ClimaLand.RootExtraction, ClimaCore.Fields.FieldVector, NamedTuple, ClimaLand.Soil.EnergyHydrology}">#</a> <b><u>ClimaLand.source!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ClimaLand</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClimaCore.Fields.FieldVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RootExtraction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 Y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClimaCore.Fields.FieldVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EnergyHydrology</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>An extension of the <code>ClimaLand.source!</code> function, which computes source terms for the soil model; this method returns the water and energy loss/gain due to root extraction.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.surface_air_density-Tuple{CoupledAtmosphere, AbstractModel, Any, Any, Vararg{Any}}" href="#ClimaLand.surface_air_density-Tuple{CoupledAtmosphere, AbstractModel, Any, Any, Vararg{Any}}">#</a> <b><u>ClimaLand.surface_air_density</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ClimaLand</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">surface_air_density</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                atmos</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CoupledAtmosphere</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                Y,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                p,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                _</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span></code></pre></div><p>Returns the air density at the surface in the case of a coupled simulation.</p><p>This requires the field <code>ρ_sfc</code> to be present in the cache <code>p</code> under the name of the model.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.surface_air_density-Tuple{PrescribedAtmosphere, AbstractModel, Vararg{Any, 4}}" href="#ClimaLand.surface_air_density-Tuple{PrescribedAtmosphere, AbstractModel, Vararg{Any, 4}}">#</a> <b><u>ClimaLand.surface_air_density</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">surface_air_density</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    atmos</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PrescribedAtmosphere</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    Y,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    p,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    t,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    T_sfc,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    )</span></span></code></pre></div><p>A helper function which returns the surface air density; this assumes that the <code>model</code> has a property called <code>parameters</code> containing <code>earth_param_set</code>.</p><p>We additionally include the <code>atmos</code> type as an argument because the surface air density computation will change between a coupled simulation and a prescibed atmos simulation.</p><p>Extending this function for your model is only necessary if you need to compute the air density in a different way.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.surface_albedo-Tuple{AbstractModel, Any, Any}" href="#ClimaLand.surface_albedo-Tuple{AbstractModel, Any, Any}">#</a> <b><u>ClimaLand.surface_albedo</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">surface_albedo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Y, p)</span></span></code></pre></div><p>A helper function which returns the surface albedo for a given model, needed because different models compute and store α_sfc in different ways and places.</p><p>Extending this function for your model is only necessary if you need to compute surface fluxes and radiative fluxes at the surface using the functions in this file.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.surface_emissivity-Tuple{AbstractModel, Any, Any}" href="#ClimaLand.surface_emissivity-Tuple{AbstractModel, Any, Any}">#</a> <b><u>ClimaLand.surface_emissivity</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">surface_emissivity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Y, p)</span></span></code></pre></div><p>A helper function which returns the surface emissivity for a given model, needed because different models compute and store ϵ_sfc in different ways and places.</p><p>Extending this function for your model is only necessary if you need to compute surface fluxes and radiative fluxes at the surface using the functions in this file.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.surface_evaporative_scaling-Union{Tuple{FT}, Tuple{AbstractModel{FT}, Any, Any}} where FT" href="#ClimaLand.surface_evaporative_scaling-Union{Tuple{FT}, Tuple{AbstractModel{FT}, Any, Any}} where FT">#</a> <b><u>ClimaLand.surface_evaporative_scaling</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">surface_evaporative_scaling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel{FT}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Y, p) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {FT}</span></span></code></pre></div><p>A helper function which returns the surface evaporative scaling factor for a given model, needed because different models compute and store β_sfc in different ways and places. Currently, this factor is 1 for all models besides the bucket model, so we have chosen a default of 1.</p><p>Extending this function for your model is only necessary if you need to compute surface fluxes and radiative fluxes at the surface using the functions in this file.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.surface_height-Tuple{AbstractModel, Any, Any}" href="#ClimaLand.surface_height-Tuple{AbstractModel, Any, Any}">#</a> <b><u>ClimaLand.surface_height</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">surface_height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Y, p)</span></span></code></pre></div><p>A helper function which returns the surface height (canopy height+elevation) for a given model, needed because different models compute and store h_sfc in different ways and places.</p><p>Extending this function for your model is only necessary if you need to compute surface fluxes and radiative fluxes at the surface using the functions in this file.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.surface_resistance-Union{Tuple{FT}, Tuple{AbstractModel{FT}, Any, Any, Any}} where FT" href="#ClimaLand.surface_resistance-Union{Tuple{FT}, Tuple{AbstractModel{FT}, Any, Any, Any}} where FT">#</a> <b><u>ClimaLand.surface_resistance</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">surface_resistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Y, p, t)</span></span></code></pre></div><p>A helper function which returns the surface resistance for a given model, needed because different models compute and store surface resistance in different ways and places.</p><p>Extending this function for your model is only necessary if you need to compute surface fluxes and radiative fluxes at the surface using the functions in this file.</p><p>The default is 0, which is no additional resistance aside from the usual aerodynamic resistance from MOST.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.surface_specific_humidity-Tuple{AbstractModel, Vararg{Any, 4}}" href="#ClimaLand.surface_specific_humidity-Tuple{AbstractModel, Vararg{Any, 4}}">#</a> <b><u>ClimaLand.surface_specific_humidity</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">surface_specific_humidity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Y, p, T_sfc, ρ_sfc)</span></span></code></pre></div><p>A helper function which returns the surface specific humidity for a given model, needed because different models compute and store q_sfc in different ways and places.</p><p>Extending this function for your model is only necessary if you need to compute surface fluxes and radiative fluxes at the surface using the functions in this file.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.surface_temperature-Tuple{AbstractModel, Any, Any, Any}" href="#ClimaLand.surface_temperature-Tuple{AbstractModel, Any, Any, Any}">#</a> <b><u>ClimaLand.surface_temperature</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">surface_temperature</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Y, p, t)</span></span></code></pre></div><p>A helper function which returns the surface temperature for a given model, needed because different models compute and store surface temperature in different ways and places.</p><p>Extending this function for your model is only necessary if you need to compute surface fluxes and radiative fluxes at the surface using the functions in this file.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.turbulent_fluxes-Tuple{CoupledAtmosphere, AbstractModel, Any, Any, Any}" href="#ClimaLand.turbulent_fluxes-Tuple{CoupledAtmosphere, AbstractModel, Any, Any, Any}">#</a> <b><u>ClimaLand.turbulent_fluxes</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">turbulent_fluxes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(atmos</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CoupledAtmosphere</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                Y,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                p,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                t)</span></span></code></pre></div><p>Computes the turbulent surface fluxes terms at the ground for a coupled simulation.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.turbulent_fluxes-Tuple{PrescribedAtmosphere, AbstractModel, ClimaCore.Fields.FieldVector, NamedTuple, Any}" href="#ClimaLand.turbulent_fluxes-Tuple{PrescribedAtmosphere, AbstractModel, ClimaCore.Fields.FieldVector, NamedTuple, Any}">#</a> <b><u>ClimaLand.turbulent_fluxes</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">turbulent_fluxes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(atmos</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PrescribedAtmosphere</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               Y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClimaCore.Fields.FieldVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               t</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               )</span></span></code></pre></div><p>Computes the turbulent surface flux terms at the ground for a standalone simulation, including turbulent energy fluxes as well as the water vapor flux (in units of m^3/m^2/s of water). Positive fluxes indicate flow from the ground to the atmosphere.</p><p>It solves for these given atmospheric conditions, stored in <code>atmos</code>, model parameters, and the surface conditions.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.turbulent_fluxes_at_a_point-Union{Tuple{EP}, Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, Any, FT, FT, FT, FT, FT, EP}} where {FT&lt;:AbstractFloat, EP}" href="#ClimaLand.turbulent_fluxes_at_a_point-Union{Tuple{EP}, Tuple{FT}, Tuple{FT, FT, FT, FT, FT, FT, FT, Any, FT, FT, FT, FT, FT, EP}} where {FT&lt;:AbstractFloat, EP}">#</a> <b><u>ClimaLand.turbulent_fluxes_at_a_point</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">turbulent_fluxes_at_a_point</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T_sfc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            q_sfc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            ρ_sfc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            β_sfc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            h_sfc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            r_sfc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            d_sfc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            ts_in,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            u</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            gustiness</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            z_0m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            z_0b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                            earth_param_set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                           ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {FT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, P}</span></span></code></pre></div><p>Computes turbulent surface fluxes at a point on a surface given (1) the surface temperature (T_sfc), specific humidity (q_sfc), and air density (ρ_sfc), (2) Other surface properties, such as the factor β_sfc which scales the evaporation from the potential rate (used in bucket models), and the surface resistance r_sfc (used in more complex land models), and the topographical height of the surface (h_sfc) (3) the roughness lengths <code>z_0m, z_0b</code>, and the Earth parameter set for the model <code>earth_params</code>. (4) the prescribed atmospheric state, <code>ts_in</code>, u, h the height at which these measurements are made, and the gustiness parameter (m/s). (5) the displacement height for the model d_sfc</p><p>This returns an energy flux and a liquid water volume flux, stored in a tuple with self explanatory keys.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.update_condition-Tuple{Any}" href="#ClimaLand.update_condition-Tuple{Any}">#</a> <b><u>ClimaLand.update_condition</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update_condition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(updateat)</span></span></code></pre></div><p>This function returns a function with the type signature expected by <code>SciMLBase.DiscreteCallback</code>, and determines whether <code>affect!</code> gets called in the callback. This implementation simply checks if the current time of the simulation is within the (inclusive) bounds of <code>updateat</code>.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="ClimaLand.vapor_pressure_deficit-NTuple{4, Any}" href="#ClimaLand.vapor_pressure_deficit-NTuple{4, Any}">#</a> <b><u>ClimaLand.vapor_pressure_deficit</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vapor_pressure_deficit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T_air, P_air, q_air, thermo_params)</span></span></code></pre></div><p>Computes the vapor pressure deficit for air with temperature T_air, pressure P_air, and specific humidity q_air, using thermo_params, a Thermodynamics.jl param set.</p><p><a href="https://github.com/CliMA/ClimaLand.jl" target="_blank" rel="noreferrer">source</a></p></div><br>`,43)]))}const u=i(n,[["render",l]]);export{c as __pageData,u as default};
